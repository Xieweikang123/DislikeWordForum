<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BackendAPI.Application</name>
    </assembly>
    <members>
        <member name="T:BackendAPI.Application.DbManagerService">
            <summary>
            数据库服务接口
            </summary>
        </member>
        <member name="M:BackendAPI.Application.DbManagerService.GetTableDataList(BackendAPI.Core.PageInfo)">
            <summary>
            获取表分页数据
            </summary>
            <param name="pageInfo"></param>
            <param name="dbConfig"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.DbManagerService.GetCurTables(BackendAPI.Core.Entities.DBConfig)">
            <summary>
            获取数据库对应表
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.DbManagerService.GetCurDbs(BackendAPI.Core.Entities.DBConfig)">
            <summary>
            获取对应数据库
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.DbManagerService.GetSqlSugarClient(System.String,System.String)">
            <summary>
            获取配置db
            </summary>
            <param name="dbConfigId"></param>
            <param name="dbName">指定数据库名字</param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.DbManagerService.DelById(BackendAPI.Core.Entities.DBConfig)">
            <summary>
            删除一条数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.DbManagerService.GetMyDbConfigs">
            <summary>
            获取我的数据库配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.DbManagerService.Save(BackendAPI.Core.Entities.DBConfig)">
            <summary>
            保存一条数据库配置
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.DbManagerService.TestConnectDb(BackendAPI.Core.Entities.DBConfig)">
            <summary>
            测试数据库连接
            </summary>
            <param name="dto"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:BackendAPI.Application.File.FileService">
            <summary>
            文件上传服务
            </summary>
        </member>
        <member name="M:BackendAPI.Application.File.FileService.GetwwwrootFiles">
            <summary>
            获取wwwroot所有文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.File.FileService.GetCurrentFilePathName(System.String,System.String@)">
            <summary>
            获取文件名
            </summary>
            <param name="suffix"></param>
            <param name="relativePath">相对路径</param>
            <returns></returns>
        </member>
        <member name="T:BackendAPI.Application.FlashContentService">
            <summary>
            闪念服务接口
            </summary>
        </member>
        <member name="M:BackendAPI.Application.FlashContentService.GetContentList(BackendAPI.Core.PageInfo)">
            <summary>
            获取闪念分页列表
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.FlashContentService.DelAContent(BackendAPI.Core.Entities.FlashContent)">
            <summary>
            删除一条闪念
            </summary>
            <param name="dto"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:BackendAPI.Application.FlashContentService.SendAContent(BackendAPI.Core.Entities.FlashContent)">
            <summary>
            发送一个闪念
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.FlashContentService.GetTodayRanking(BackendAPI.Core.PageInfo)">
            <summary>
            今日背单词排行  
            头像 人 昵称---单词数
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:BackendAPI.Application.NoteService">
            <summary>
            闪念服务接口
            </summary>
            
        </member>
        <member name="M:BackendAPI.Application.NoteService.ConvertBase64toUrl(System.String)">
            <summary>
            将内容里的bsse64转图片
            </summary>
            <param name="oriContent"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BackendAPI.Application.NoteService.GetBase64ImgContent(BackendAPI.Core.Entities.NoteDTO)" -->
        <member name="M:BackendAPI.Application.NoteService.SendAContent(BackendAPI.Core.Entities.NoteDTO)">
            <summary>
            发表内容
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.NoteService.RecordOldNote(BackendAPI.Core.Entities.Note)">
            <summary>
            记录笔记 日志
            </summary>
            <param name="dto"></param>
        </member>
        <member name="M:BackendAPI.Application.NoteService.SaveNoteWithTag(BackendAPI.Core.Entities.Note)">
            <summary>
            编辑保存笔记标签
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.NoteService.GetMyNoteTagList(BackendAPI.Core.Entities.NoteDTO)">
            <summary>
            获取所有标签
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.NoteService.GetCurNoteHisList(BackendAPI.Core.Entities.Note)">
            <summary>
            获取当前笔记的历史记录
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.NoteService.GetCalendarHeatmapList(BackendAPI.Core.PageInfo)">
            <summary>
            获取日历热图
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.NoteService.SetPageWhere(BackendAPI.Core.PageInfo,SqlSugar.Expressionable{BackendAPI.Core.Entities.Note},System.Int32)">
            <summary>
            封装pagewhere
            </summary>
            <param name="dto"></param>
            <param name="exp"></param>
            <param name="type">type=1 assignTime不参与筛选</param>
        </member>
        <member name="M:BackendAPI.Application.NoteService.GetContentList(BackendAPI.Core.PageInfo)">
            <summary>
            获取笔记分页列表
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.NoteService.RecoveryAContent(BackendAPI.Core.Entities.Note)">
            <summary>
            恢复笔记
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.NoteService.DelAContent(BackendAPI.Core.Entities.Note)">
            <summary>
            删除一条笔记
            </summary>
            <param name="dto"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:BackendAPI.Application.NoteService.GetNoteById(BackendAPI.Core.Entities.NoteDTO)">
            <summary>
            获取指定笔记
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.NoteService.GetTodayRanking(BackendAPI.Core.PageInfo)">
            <summary>
            今日背单词排行  
            头像 人 昵称---单词数
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:BackendAPI.Application.TagService">
            <summary>
            标签服务接口
            </summary>
            
        </member>
        <member name="M:BackendAPI.Application.TagService.ChangeTagName(BackendAPI.Core.Entities.NoteTagDTO)">
            <summary>
            发表内容
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:BackendAPI.Application.NotifyService">
            <summary>
            通知服务接口
            </summary>
            
        </member>
        <member name="M:BackendAPI.Application.NotifyService.GetTuReplyMsg(BackendAPI.Application.NotifyService.RepEntity)">
            <summary>
            获取兔小巢回复消息
            </summary>
            <param name="repEntity">cookie</param>
            <returns></returns>
            
        </member>
        <member name="T:BackendAPI.Application.PageInfoRanking">
            <summary>
            
            </summary>
        </member>
        <member name="T:BackendAPI.Application.RankingService">
            <summary>
            排行接口
            </summary>
            
        </member>
        <member name="M:BackendAPI.Application.RankingService.GetTodayRanking(BackendAPI.Application.PageInfoRanking)">
            <summary>
            今日背单词排行  
            头像 人 昵称---单词数
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:BackendAPI.Application.RetObj">
            <summary>
            返回对象
            </summary>
        </member>
        <member name="P:BackendAPI.Application.RetObj.Msg">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:BackendAPI.Application.RetObj.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:BackendAPI.Application.SystemAppService">
            <summary>
            系统服务接口
            </summary>
        </member>
        <member name="M:BackendAPI.Application.SystemAppService.GetDescription">
            <summary>
            获取系统描述
            </summary>
            <returns></returns>
        </member>
        <member name="T:BackendAPI.Application.TestService">
            <summary>
            闪念服务接口
            </summary>
            
        </member>
        <member name="T:BackendAPI.Application.User.CurrentUserInfo">
            <summary>
            当前用户信息读取
            </summary>
        </member>
        <member name="P:BackendAPI.Application.User.CurrentUserInfo.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:BackendAPI.Application.UserDTO.PasswordAgain">
             <summary>
             再次输入密码
            </summary>
        </member>
        <member name="T:BackendAPI.Application.UserAppService">
            <summary>
            用户服务接口
            </summary>
            
        </member>
        <member name="M:BackendAPI.Application.UserAppService.GetUserInfo">
            <summary>
            获取个人信息
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:BackendAPI.Application.UserAppService.SaveUserInfo(BackendAPI.Application.UserDTO)">
            <summary>
            保存用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.UserAppService.Login(BackendAPI.Application.UserDTO)">
            <summary>
            登录成功
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.UserAppService.Register(BackendAPI.Application.UserDTO)">
            <summary>
            注册
            </summary>
            <returns></returns>
        </member>
        <member name="T:BackendAPI.Application.WalkerAppService">
            <summary>
            系统服务接口
            </summary>
        </member>
        <member name="M:BackendAPI.Application.WalkerAppService.GetDescription">
            <summary>
            获取系统描述
            </summary>
            <returns></returns>
        </member>
        <member name="T:BackendAPI.Application.WordAppService">
            <summary>
            单词服务接口
            </summary>
            
        </member>
        <member name="F:BackendAPI.Application.WordAppService.wordCacheKey">
            <summary>
            单词缓存关键字
            </summary>
        </member>
        <member name="M:BackendAPI.Application.WordAppService.GetRecentWordChartData(System.Int32)">
            <summary>
            获取最近7天单词数
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.WordAppService.GetGreaterThanRecordWords(System.Int32)">
            <summary>
            获取大于指定记录数的单词
            </summary>
            <param name="recordTimes"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.WordAppService.OnSaveWord(BackendAPI.Core.Entities.EnglishWord)">
            <summary>
            保存单词
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.WordAppService.OnDelWord(BackendAPI.Core.Entities.EnglishWord)">
            <summary>
            删除单词
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.WordAppService.RecordWord(BackendAPI.Core.Entities.EnglishWord)">
            <summary>
            记录单词
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BackendAPI.Application.WordAppService.GetCacheEnglishWords(System.Boolean)">
            <summary>
            查询缓存单词
            </summary>
            <param name="isGetNew">重新获取</param>
            <returns></returns>
        </member>
        <member name="T:BackendAPI.Core.PageInfoWord">
            <summary>
            单词分页
            </summary>
        </member>
        <member name="P:BackendAPI.Core.PageInfoWord.searchScop">
            <summary>
            搜索范围
            </summary>
        </member>
    </members>
</doc>
